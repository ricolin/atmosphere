# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Copy data from Mariadb to PXC
  when: _service_uses_mariadb
  run_once: true
  block:
    - name: Get the Kuberentes service for Mariadb
      run_once: true
      kubernetes.core.k8s_info:
        kind: Service
        name: "{{ migrate_db_from_mariadb_mariadb_service_name }}"
        namespace: "{{ migrate_db_from_mariadb_mariadb_namespace }}"
      register: _mariadb_service

    - name: Install the mysql client
      ansible.builtin.package:
        name: mysql-client
        state: latest # noqa: package-latest

    - name: Dump the database
      run_once: true
      community.mysql.mysql_db:
        login_host: "{{ _mariadb_service.resources[0].spec.clusterIP }}"
        login_user: "{{ _service_mariadb_username }}"
        login_password: "{{ _service_mariadb_password }}"
        state: dump
        name: "{{ item.key }}"
        dump_extra_args: --skip_add_locks --set-gtid-purged=OFF
        skip_lock_tables: true
        target: "/root/{{ item.key }}-{{ ansible_date_time.epoch }}.sql"
      loop: "{{ migrate_db_from_mariadb_databases | dict2items }}"

    - name: Restore the database
      run_once: true
      community.mysql.mysql_db:
        login_host: "{{ _pxc_service.resources[0].spec.clusterIP }}"
        login_user: root
        login_password: "{{ openstack_helm_endpoints.oslo_db.auth.admin.password }}"
        state: import
        name: "{{ item.value }}"
        target: "/root/{{ item.key }}-{{ ansible_date_time.epoch }}.sql"
      loop: "{{ migrate_db_from_mariadb_databases | dict2items }}"
